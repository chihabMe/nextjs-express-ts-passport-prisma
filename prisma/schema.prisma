// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id       String  @id @default(uuid())
  username String
  email    String  @unique
  password String
  verified Boolean @default(false)
  active   Boolean @default(false)
  Token    Token[]
}

model Token {
  id     String  @id @default(uuid())
  user   User    @relation(fields: [userId], references: [id])
  userId String
  active Boolean @default(true)
}

model Profile {
  id          String   @id @default(uuid())
  phoneNumber String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  image       Image?   @relation(fields: [imageId], references: [id], name: "profileImage")
  imageId     String   @unique
}

model Image {
  id        String   @id @default(uuid())
  url       String
  createdAt DateTime @default(now())
  profile   Profile? @relation("profileImage")

  Property   Property? @relation("propertyImages", fields: [propertyId], references: [id])
  propertyId String?

  featredBy Property? @relation("featredBy")
}

model Property {
  id     String  @id @default(uuid())
  images Image[] @relation("propertyImages")

  featredImage   Image  @relation(fields: [featredImageId], references: [id], name: "featredBy")
  featredImageId String @unique

  propertyType   PropertyType @relation(fields: [propertyTypeId], references: [id])
  propertyTypeId String

  numberOfRooms     Int
  numberOfBathRooms Int
  hasAPool          Boolean @default(false)
  hasAnAC           Boolean @default(true)
  builtYear         Int
  area              Int
  price             Int

  title        String
  descripton   String
  introduction String
  location     String
}

model PropertyType {
  id        String     @id @default(uuid())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  Property  Property[]
}
